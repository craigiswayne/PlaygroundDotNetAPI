name: Build and Test

on:
  push:
    branches:
      - main
      - feature/fix-prod-environment
#    paths-ignore:
#      - '**/*.md'
#  pull_request:
#    types: [opened, reopened, edited]
#    branches: [develop]

permissions:
  id-token: write
  contents: read

env:
  # prevents outputting sensitive info to the pipeline console
  AZURE_CORE_OUTPUT: 'none'

jobs:
  infrastructure:
    name: "Create Infrastructure"
    runs-on: ubuntu-latest

    env:
      SUBSCRIPTION_ID: 'ad7ba97b-49f2-48c6-80fa-101ab7657e28'
      RESOURCE_LOCATION: 'uksouth'
      RESOURCE_GROUP_NAME: 'DefaultResourceGroup-SUK'

    steps:
      - uses: actions/checkout@v4

       # https://github.com/Azure/login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.managedEnv20240830130926_SPN }}

  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '8.0.x' ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Display dotnet version
        id: dotnet_version
        run: dotnet --version

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ matrix.dotnet-version }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test with the dotnet CLI
        run: dotnet test --logger html --verbosity normal --results-directory "TestResults-${{ matrix.dotnet-version }}"

      - name: Upload dotnet test results
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-results-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
